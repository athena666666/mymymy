import React, { useState } from 'react';

const ScoreBoard = () => {
  const [scoreA, setScoreA] = useState(0);
  const [scoreB, setScoreB] = useState(0);

  const updateScore = (team, increment) => {
    const setScore = team === 'A' ? setScoreA : setScoreB;
    setScore(prevScore => {
      const newScore = prevScore + increment;
      return newScore >= 0 && newScore <= 10 ? newScore : prevScore;
    });
  };

  const Triangle = ({ direction, onClick }) => (
    <polygon 
      points={direction === 'left' ? "20,0 20,40 0,20" : "0,0 20,20 0,40"}
      fill="#333"
      cursor="pointer"
      onClick={onClick}
      style={{
        outline: 'none',
        touchAction: 'manipulation',
      }}
    />
  );

  const ScoreDisplay = ({ team, score }) => (
    <g transform={`translate(${team === 'A' ? 0 : 220}, 0)`}>
      <rect x="10" y="10" width="200" height="180" fill="#ff6b6b" rx="10" />
      <rect x="10" y="70" width="200" height="120" fill="white" rx="10" />
      <text x="110" y="50" fontSize="36" textAnchor="middle" fill="white">{`${team} 队`}</text>
      <text x="110" y="150" fontSize="72" textAnchor="middle" fill="black">
        {score.toString().padStart(2, '0')}
      </text>
      <g transform="translate(25, 120)">
        <Triangle direction="left" onClick={() => updateScore(team, 1)} />
      </g>
      <g transform="translate(175, 120)">
        <Triangle direction="right" onClick={() => updateScore(team, -1)} />
      </g>
    </g>
  );   ）;

  return (   回报(
    <svg 
      width="430" 
      height="200" 
      viewBox="0 0 430 200"
      style={{   风格= {{
        WebkitTapHighlightColor: 'transparent',
        userSelect: 'none',
      }}
    >
      <rect x="0" y="0" width="430" height="200" fill="#ffeaa7" rx="10" />
      <ScoreDisplay team="A" score={scoreA} />
      <ScoreDisplay team="B" score={scoreB} />
    </svg>
  );   ）;
};

export default ScoreBoard;

